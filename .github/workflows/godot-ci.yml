name: "Publish Project"

on:
  workflow_dispatch:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  export-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    container:
      image: barichello/godot-ci:mono-3.5.2
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup node"
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: "Install Requirements"
        run: |
          apt-get update -y && apt-get install -y unzip && apt-get install -y wget && apt-get install -y cpio
          apt install -y npm
          npm i --save wrangler
          mkdir -p $HOME/.local/share/godot/templates/3.5.2.stable.mono
          wget https://github.com/godotengine/godot/releases/download/3.5.2-stable/Godot_v3.5.2-stable_mono_export_templates.tpz
          unzip Godot_v3.5.2-stable_mono_export_templates.tpz -d /tmp
          mv /tmp/templates/* $HOME/.local/share/godot/templates/3.5.2.stable.mono
          
      - name: "Export to HTML5"
        run: | 
          mkdir -v -p ./build/web
          godot -v --export "HTML5" ./build/web/index.html
      
      - name: "Export to OSX"
        run: |
          mkdir -v -p ./build/mac
          godot -v --export "Mac OSX" ./build/mac/app.zip

      - name: "Export to Windows"
        run: |
          mkdir -v -p ./build/windows
          godot -v --export "Windows Desktop" ./build/windows/app.exe

      - name: "Export to X11"
        run: |
          mkdir -v -p ./build/linux
          godot -v --export "Linux/X11" ./build/linux/app.x86_64

      - name: "Deploy to CF Pages"
        id: pages_deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ypaaf
          directory: ./
          workingDirectory: ./build/web
      
      - name: "Create release"
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: build-${{ github.sha }}
          files: |
            ./build/mac/app.zip
            ./build/windows/app.exe
            ./build/linux/app.x86_64
          body: "Web build: ${{ steps.pages_deploy.outputs.url }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
